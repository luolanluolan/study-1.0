<?xml version="1.0" encoding="UTF-8"?>
<!--
	logback.xml的基本配置信息都包含在configuration标签中，
	需要含有至少一个appender标签用于指定日志输出方式和输出格式，
	root标签为系统默认日志进程，通过level指定日志级别，
	通过appender-ref关联前面指定顶的日志输出方式。
 -->
<!-- 定义 每隔10秒中扫描该文件 -->
<!--<configuration scan="true" scanPeriod="10 seconds" debug="true">-->
<configuration debug="true">
    <!--<springProperty scope="context" name="springAppName" source="spring.application.name"/>
    <include resource="org/springframework/boot/logging/logback/base.xml"/>
    <appender name="LOGSTASH" class="net.logstash.logback.appender.LogstashTcpSocketAppender">
        <destination>${log.logstash.destination:-localhost}</destination>
        <encoder charset="UTF-8" class="net.logstash.logback.encoder.LogstashEncoder">
            <customFields>{"appname":"${springAppName}","profile":"${spring.profiles.active}"}</customFields>
            <includeMdcKeyName>rid</includeMdcKeyName>
        </encoder>
    </appender>
&lt;!&ndash;    <logger name="com.crux" level="DEBUG"/>&ndash;&gt;
&lt;!&ndash;    <logger name="com.yonyougov" level="DEBUG"/>&ndash;&gt;
    <root level="DEBUG">
        <appender-ref ref="CONSOLE" />
        <appender-ref ref="${log.appender:-FILE}" />
    </root>-->

    <!--定义日志输出目录-->
    <property name="LOG_HOME" value="study"/>
<!--    &lt;!&ndash; 控制台输出的日志格式 &ndash;&gt;-->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
<!--            &lt;!&ndash;   <pattern>[%d{yyyy-MM-dd HH:mm:ss,SSS\} %-5p] %-20c - %m%n</pattern> &ndash;&gt;-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>
    <!-- 按照登录用户的userId产生日志 -->
    <!--<appender name="SIFT" class="ch.qos.logback.classic.sift.SiftingAppender">
        <discriminator>
            <Key>userId</Key>
            <DefaultValue>unknown</DefaultValue>
        </discriminator>
        <sift>
            <appender name="FILE-${userId}" class="ch.qos.logback.core.rolling.RollingFileAppender">
                <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                    <fileNamePattern>${LOG_HOME}/${userId}/${HOSTNAME}_%d{yyyyMMdd}.%i.log</fileNamePattern>
                    &lt;!&ndash; 根据日志文件按天回滚，保存时间为30天，30天之前的都将被清理掉 &ndash;&gt;
                    <maxHistory>7</maxHistory>
                    <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                        <maxFileSize>20MB</maxFileSize>
                    </timeBasedFileNamingAndTriggeringPolicy>
                </rollingPolicy>
                <Append>false</Append>
                <encoder>
                    <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
                    <charset>UTF-8</charset>
                </encoder>
            </appender>
        </sift>
    </appender>-->
    <!-- 输出error log 至统一日志文件中 -->
    <!--<appender name="ERRORAPPENDER" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}-log/error/%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            &lt;!&ndash; 根据日志文件按天回滚，保存时间为30天，30天之前的都将被清理掉 &ndash;&gt;
            <maxHistory>7</maxHistory>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>20MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            &lt;!&ndash; 只打印ERROR日志 &ndash;&gt;
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>-->
    <!-- 设置日志（访问日志，系统日志）输出位置以及格式 -->
    <!--<appender name="INTERFACE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>${LOG_HOME}/interface/${HOSTNAME}_%d{yyyy-MM-dd}.%i.log</FileNamePattern>
            &lt;!&ndash; 根据日志文件按天回滚，保存时间为30天，30天之前的都将被清理掉 &ndash;&gt;
            <maxHistory>7</maxHistory>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>20MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder>
            <pattern>[%date] [%thread] [%level] %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            &lt;!&ndash; 只打印INFO日志 &ndash;&gt;
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>-->
    <!-- 输出URL访问日志 -->
    <!--<appender name="URLLOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>${LOG_HOME}/URL/${HOSTNAME}_%d{yyyy-MM-dd}.%i.log</FileNamePattern>
            <maxHistory>7</maxHistory>
            &lt;!&ndash; 日志大小 &ndash;&gt;
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>20MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder>
            <pattern>[%thread] [%date] [%level] %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            &lt;!&ndash; 只打印INFO日志 &ndash;&gt;
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>-->
    <!-- access url -->
    <!--<appender name="mq_biz_url" class="ch.qos.logback.classic.sift.SiftingAppender">
        <discriminator>
            <Key>SYS_FLAG</Key>
            <DefaultValue>unknown</DefaultValue>
        </discriminator>
        <sift>
            <appender name="FILE-${userId}" class="ch.qos.logback.core.rolling.RollingFileAppender">
                <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                    <fileNamePattern>${LOG_HOME}/access/${SYS_FLAG}_%d{yyyyMMdd}.%i.log</fileNamePattern>
                    <maxHistory>7</maxHistory>
                    <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                        <maxFileSize>20MB</maxFileSize>
                    </timeBasedFileNamingAndTriggeringPolicy>
                </rollingPolicy>
                <Append>false</Append>
                <encoder>
                    <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %msg%n</pattern>
                    <charset>UTF-8</charset>
                </encoder>
            </appender>
        </sift>
    </appender>-->
    <!-- 审计URL日志 -->
    <!--<appender name="ADUIT_URL_APPENDER" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/aduit_logs/${HOSTNAME}_%d{yyyyMMdd}.%i.log</fileNamePattern>
            <maxHistory>7</maxHistory>
            &lt;!&ndash; 日志大小 &ndash;&gt;
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>20MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            &lt;!&ndash; 只打印ERROR日志 &ndash;&gt;
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>-->

    <!--<logger name="com.study.order" additivity="true">
        <level value="DEBUG"/>
        <appender-ref ref="ERRORAPPENDER"/>
    </logger>
    <logger name="com.study.order" additivity="false">
        <level value="ERROR"/>
        <appender-ref ref="STDOUT"/>
&lt;!&ndash;        <appender-ref ref="SIFT"/>&ndash;&gt;
        <appender-ref ref="ERRORAPPENDER"/>
    </logger>-->
    <!--<logger name="java.sql.PreparedStatement" additivity="false">
        <level value="DEBUG"/>
        <appender-ref ref="STDOUT"/>
    </logger>
    <logger name="com.alibaba.druid" additivity="false">
        <level value="INFO"/>
        <appender-ref ref="STDOUT"/>
    </logger>
    <logger name="org.mybatis.spring.mapper" additivity="false">
        <level value="INFO"/>
        <appender-ref ref="STDOUT"/>
    </logger>-->
    <logger name="org.springframework.cloud" additivity="false">
        <level value="ERROR"/>
        <appender-ref ref="STDOUT"/>
    </logger>
    <root level="debug">
        <appender-ref ref="STDOUT"/>
    </root>
</configuration>